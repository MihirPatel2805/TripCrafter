[{"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\index.js":"1","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\App.js":"2","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\layout\\Layout.jsx":"3","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Headers.jsx":"4","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Footer.jsx":"5","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Routers.jsx":"6","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Thankyou.jsx":"7","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Booking.jsx":"8","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Mybookings.jsx":"9","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\TrainListingPage.js":"10","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\About.jsx":"11","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Login.jsx":"12","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Home.jsx":"13","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\layout\\Bookinglayout.jsx":"14","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Tour.jsx":"15","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Register.jsx":"16","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Traincheckoutpage.jsx":"17","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\trainData.js":"18","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\UseFetch.js":"19","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Traintopsection.jsx":"20","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\TrainCard.jsx":"21","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Gallary.jsx":"22","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Card.jsx":"23","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\CardSec.jsx":"24","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\TrainStation.jsx":"25","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Traintopdropdown.jsx":"26","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Payment.jsx":"27"},{"size":578,"mtime":1726757988519,"results":"28","hashOfConfig":"29"},{"size":164,"mtime":1726757988487,"results":"30","hashOfConfig":"29"},{"size":291,"mtime":1726757988519,"results":"31","hashOfConfig":"29"},{"size":3924,"mtime":1726815962551,"results":"32","hashOfConfig":"29"},{"size":3589,"mtime":1726809134692,"results":"33","hashOfConfig":"29"},{"size":1539,"mtime":1726849800402,"results":"34","hashOfConfig":"29"},{"size":1056,"mtime":1726757988487,"results":"35","hashOfConfig":"29"},{"size":8580,"mtime":1726850473739,"results":"36","hashOfConfig":"29"},{"size":3414,"mtime":1726757988487,"results":"37","hashOfConfig":"29"},{"size":11560,"mtime":1726807074862,"results":"38","hashOfConfig":"29"},{"size":2315,"mtime":1726809202387,"results":"39","hashOfConfig":"29"},{"size":3926,"mtime":1726757988519,"results":"40","hashOfConfig":"29"},{"size":5072,"mtime":1726807074862,"results":"41","hashOfConfig":"29"},{"size":13738,"mtime":1726812856950,"results":"42","hashOfConfig":"29"},{"size":2417,"mtime":1726817464729,"results":"43","hashOfConfig":"29"},{"size":6019,"mtime":1726757988519,"results":"44","hashOfConfig":"29"},{"size":8498,"mtime":1726807074863,"results":"45","hashOfConfig":"29"},{"size":15233,"mtime":1726807074861,"results":"46","hashOfConfig":"29"},{"size":871,"mtime":1726757988487,"results":"47","hashOfConfig":"29"},{"size":5310,"mtime":1726807074860,"results":"48","hashOfConfig":"29"},{"size":3430,"mtime":1726817297037,"results":"49","hashOfConfig":"29"},{"size":2537,"mtime":1726757988487,"results":"50","hashOfConfig":"29"},{"size":1108,"mtime":1726757988487,"results":"51","hashOfConfig":"29"},{"size":2187,"mtime":1726757988487,"results":"52","hashOfConfig":"29"},{"size":1293,"mtime":1726807074859,"results":"53","hashOfConfig":"29"},{"size":3289,"mtime":1726807074859,"results":"54","hashOfConfig":"29"},{"size":14374,"mtime":1726851054622,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1vm3liy",{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"59"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"59"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\index.js",[],[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\App.js",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\layout\\Layout.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Headers.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Footer.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Routers.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Thankyou.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Booking.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Mybookings.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\TrainListingPage.js",["141","142","143","144"],[],"import React, { useEffect, useState } from \"react\";\r\nimport \"./trainsearchpage.css\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport trainData from \"../components/trainData\";\r\nimport TrainCard from \"../components/TrainCard\";\r\nimport Traintopsection from \"../components/Traintopsection\";\r\n // Import the train data\r\n\r\nconst TrainListingPage = () => {\r\n  const [params, setParams] = useSearchParams();\r\n  const source = params.get(\"source\");\r\n  const destination = params.get(\"destination\");\r\n  const day = params.get(\"day\");\r\n  const trainType = params.get(\"trainType\");\r\n  const departureTime = params.get(\"departureTime\");\r\n  const arrivalTime = params.get(\"arrivalTime\");\r\n  const coachType = params.get(\"coachType\");\r\n\r\n  // Static train data\r\n\r\n\r\n  const [data, setData] = useState({ trains: [] });\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleCheckboxChange = (key, value) => {\r\n    if (value === \"\") {\r\n      params.delete(key);\r\n      setParams(params);\r\n      return;\r\n    }\r\n\r\n    const newSearchParams = { ...Object.fromEntries(params), [key]: value };\r\n    setParams(newSearchParams);\r\n  };\r\n\r\n  const handleTrainSearchButtonClick = (searchData) => {\r\n    setParams({\r\n      source: searchData.source,\r\n      destination: searchData.destination,\r\n      day: searchData.day,\r\n      date: searchData.date, // Assuming date is part of searchData\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTrainData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/api/trains/\");\r\n        let filteredTrains = response.data;\r\n        if (source) {\r\n          filteredTrains = filteredTrains.filter(train => train.source === source);\r\n\r\n        }\r\n\r\n        if (destination) {\r\n          filteredTrains = filteredTrains.filter(train => train.destination === destination);\r\n        }\r\n\r\n        if (day) {\r\n          filteredTrains = filteredTrains.filter(train => JSON.parse(train.daysOfOperation).includes(day.toLowerCase()));\r\n        }\r\n\r\n        if (departureTime) {\r\n          filteredTrains = filteredTrains.filter(train => train.departureTime >= departureTime);\r\n        }\r\n\r\n        if (arrivalTime) {\r\n          filteredTrains = filteredTrains.filter(train => train.arrivalTime <= arrivalTime);\r\n        }\r\n\r\n        if (coachType) {\r\n          filteredTrains = filteredTrains.filter(train =>\r\n              train.coaches.some(coach => coach.coachType === coachType)\r\n          );\r\n        }\r\n\r\n        if (trainType) {\r\n          filteredTrains = filteredTrains.filter(train => train.trainType === trainType);\r\n        }\r\n        setData({ trains: filteredTrains });\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTrainData();\r\n  }, [params]); // Depend on params only\r\n\r\n  return (\r\n      <>\r\n        <div className=\"trainspagemaindiv\">\r\n          <Traintopsection updateSearchParams={handleTrainSearchButtonClick} />\r\n          <div className=\"trainspage-bottomdiv\">\r\n            <div className=\"filters-div\">\r\n              <div className=\"flitercategory\">\r\n                <p>Quick Filters</p>\r\n                <ul>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={departureTime === \"18\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"departureTime\",\r\n                                e.target.checked ? 18 : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Departure after 6 PM</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={arrivalTime === \"12\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"arrivalTime\",\r\n                                e.target.checked ? 12 : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Arrival before 12 PM</p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"flitercategory\">\r\n                <p>Journey Class Filters</p>\r\n                <ul>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"1A\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"1A\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>1st Class AC - 1A</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"2A\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"2A\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>2 Tier AC - 2A</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"3A\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"3A\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>3 Tier AC - 3A</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"3E\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"3E\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>AC three tier(economy)-3E</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"SL\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"SL\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Sleeper - SL</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"CC\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"CC\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>AC Chair Car - CC</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"2S\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"2S\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Second Sitting - 2S</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={coachType === \"EA\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"coachType\",\r\n                                e.target.checked ? \"EA\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Executive Anubhuti - EA</p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n\r\n              <div className=\"flitercategory\">\r\n                <p>Train Types</p>\r\n                <ul>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={trainType === \"Superfast\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"trainType\",\r\n                                e.target.checked ? \"Superfast\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Superfast</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={trainType === \"Rajdhani\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"trainType\",\r\n                                e.target.checked ? \"Rajdhani\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Rajdhani</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={trainType === \"Express\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"trainType\",\r\n                                e.target.checked ? \"Express\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Express</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={trainType === \"Shatabdi\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"trainType\",\r\n                                e.target.checked ? \"Shatabdi\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Shatabdi</p>\r\n                  </li>\r\n                  <li>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={trainType === \"Duronto\" ? true : false}\r\n                        onChange={(e) =>\r\n                            handleCheckboxChange(\r\n                                \"trainType\",\r\n                                e.target.checked ? \"Duronto\" : \"\"\r\n                            )\r\n                        }\r\n                    />\r\n                    <p>Duronto </p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            <TrainCard data={data} />\r\n          </div>\r\n        </div>\r\n      </>\r\n  );\r\n};\r\n\r\nexport default TrainListingPage;\r\n","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\About.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Login.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Home.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\layout\\Bookinglayout.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Tour.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Register.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Traincheckoutpage.jsx",["145","146"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./traincheckoutpage.css\";\r\nimport { useParams, useSearchParams } from \"react-router-dom\";\r\nconst calculateFare = (baseFare, coachType) => {\r\n    let multiplier = 1;\r\n  \r\n    // Assign multipliers based on coach types (capped at 2.5)\r\n    switch (coachType) {\r\n      case \"1A\": // First AC\r\n        multiplier = 2.2;\r\n        break;\r\n      case \"2A\": // Second AC\r\n        multiplier = 2;\r\n        break;\r\n      case \"3A\": // Third AC\r\n        multiplier = 1.7;\r\n        break;\r\n      case \"CC\": // Chair Car\r\n        multiplier = 1.5;\r\n        break;\r\n      case \"SL\": // Sleeper Class\r\n        multiplier = 1.2;\r\n        break;\r\n      default:\r\n        multiplier = 1; // General or any other coach type\r\n        break;\r\n    }\r\n  \r\n    // Calculate final fare based on base fare and multiplier\r\n    return parseInt(baseFare * multiplier);\r\n  };\r\nconst Traincheckoutpage = () => {\r\n  const [data, setData] = useState(null); // State to hold fetched data\r\n  const [params] = useSearchParams();\r\n  const date = decodeURI(params.get(\"date\")); // To get the 'date' query parameter\r\n  const { id,coachName } = useParams(); // Get the train ID from the URL params\r\n\r\n  useEffect(() => {\r\n    // Fetch train data by train ID\r\n    const fetchTrainData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/api/trains/${id}/`);\r\n        setData(response.data); // Set the fetched data to state\r\n        console.log(response.data)\r\n        console.log(coachName)\r\n      } catch (error) {\r\n        console.error(\"Error fetching train data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTrainData();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"travellerInfo\">\r\n        <div className=\"travellerHead\">\r\n          <h2>Select Travellers</h2>\r\n        </div>\r\n        <div className=\"railTravellersWrapper\">\r\n          <div className=\"railTravellersContainer\">\r\n            <section className=\"leftSection appendTop30 appendRight30\">\r\n              <div className=\"trdInfo\">\r\n                <div className=\"trdDetails makeFlex column\">\r\n                  <div className=\"appendBottom30\">\r\n                    <div className=\"makeFlex appendBottom5 spaceBetween\">\r\n                      <div className=\"column appendRight50\">\r\n                        <h3 className=\"font22 latoBlack appendBottom5\">\r\n                          {data?.trainName}\r\n                        </h3>\r\n                        <p>\r\n                          <span className=\"font12 lightGreyText\">\r\n                            #{data?.trainNumber}\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"makeFlex hrtlCenter \">\r\n                        <div className=\"makeFlex column appendRight20 ml-5\">\r\n                          <p className=\"appendBottom10\">\r\n                            <span className=\"latoBlack\">\r\n                              {data?.departureTime}\r\n                            </span>\r\n                            <span className=\"latoBlack\">, </span>\r\n                          </p>\r\n                          <p className=\"font12 darkGreyText\">\r\n                            {data?.source}\r\n                          </p>\r\n                        </div>\r\n                        <span className=\"bdrTop\"></span>\r\n                        <div className=\"makeFlex column appendRight20\">\r\n                          <p className=\"font12 latoBold appendBottom20\">\r\n                            10\r\n                            <span className=\"lightGreyText\"> hrs </span>\r\n                            48\r\n                            <span className=\"lightGreyText\"> mins</span>\r\n                          </p>\r\n                        </div>\r\n                        <span className=\"bdrTop\"></span>\r\n                        <div className=\"makeFlex column appendBottom10 appendTop15\">\r\n                          <p className=\"appendBottom10\">\r\n                            <span className=\"latoBlack\">\r\n                              {data?.arrivalTime}\r\n                            </span>\r\n                            <span className=\"latoBlack\">, </span>\r\n                          </p>\r\n                          <p className=\"font12 darkGreyText\">\r\n                            {data?.destination}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"makeFlex makeRelative\">\r\n                    <div className=\"makeFlex column appendRight40\">\r\n                      <div className=\"makeFlex column\">\r\n                        <h3 className=\"latoBold font14 darkGreyText \">\r\n                          Availability Status\r\n                        </h3>\r\n                        <div className=\"trStatusBlock\">\r\n                          <p className=\"makeFlex appendBottom5 hrtlCenter\">\r\n                            <span className=\"latoBlack font16 appendRight20\">\r\n                              SL\r\n                            </span>\r\n                            <span className=\"latoBold font16\">\r\n                              <span className=\"orangeText\">RLWL40/WL33</span>\r\n                            </span>\r\n                          </p>\r\n                          <p className=\"font12 lightGreyText appendTop10\">\r\n                            Updated 11 hrs ago\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"ml-[43px]\">\r\n                      <div className=\"selectedQuotaContainer noSelection selectWrap makeRelative\">\r\n                        <p className=\"labelName appendBottom10 darkGreyText font14 greyed latoBold\">\r\n                          Your Boarding Station\r\n                        </p>\r\n                        <p className=\"selectedQuota cursorPointer latoBold font12 makeFlex\">\r\n                          <span className=\"latoRegular font14 darkGreyText\">\r\n                            {data?.source} - {data?.departureTime}\r\n                          </span>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n            <section className=\" appendTop30 rightrailSection\">\r\n              <div className=\"appendBottom20\">\r\n                <div id=\"FARE_SUMMARY\">\r\n                  <section className=\"fareSummary\">\r\n                    <div>\r\n                      <p className=\"fontSize18 blackFont payandbook\">\r\n                        FARE SUMMARY\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"fareBreakWrapper\">\r\n                      <div className=\"fareTypeWrap\">\r\n                        <div className=\"fareRow\">\r\n                          <div className=\"makeFlex pointer flexOne\">\r\n                            <span className=\"fareHeader\">Base Fare</span>\r\n                          </div>\r\n                          <span className=\"fontSize14 darkText\">\r\n                            ₹ {calculateFare(data?.fare,coachName)}\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"fareTypeWrap\">\r\n                        <div className=\"fareRow\">\r\n                          <div className=\"makeFlex pointer flexOne\">\r\n                            <span className=\"fareHeader\">Extra Charges</span>\r\n                          </div>\r\n                          <span className=\"fontSize14 darkText\">₹ 0</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"fareFooter\">\r\n                      <p className=\"payNowWrapper\">\r\n                        <span className=\"fontSize16 blackFont\">Total Price</span>\r\n                        <span className=\"fontSize16 blackFont\">\r\n                          ₹ {calculateFare(data?.fare,coachName)}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </section>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"bg-[#fff]\">\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Traincheckoutpage;\r\n","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\trainData.js",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\UseFetch.js",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Traintopsection.jsx",["147","148"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { IoIosArrowUp } from \"react-icons/io\";\r\nimport OutsideClickHandler from \"react-outside-click-handler\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport TrainStation from \"./TrainStation\";\r\n\r\nconst cities = [\r\n  { JunctionName: \"Delhi Junction\" },\r\n  { JunctionName: \"Salem Junction\" },\r\n  { JunctionName: \"Hubli Junction\" },\r\n  { JunctionName: \"Surat\" },\r\n  { JunctionName: \"Udaipur\" },\r\n  { JunctionName: \"Katpadi Junction\" },\r\n  { JunctionName: \"Vadodara Junction\" },\r\n  { JunctionName: \"Kanpur\" },\r\n  { JunctionName: \"Dhanbad Junction\" },\r\n  { JunctionName: \"Kharagpur Junction\" },\r\n  { JunctionName: \"Manmad Junction\" },\r\n  { JunctionName: \"Indore Junction\" },\r\n  { JunctionName: \"Vijayawada Junction\" },\r\n  { JunctionName: \"Chandigarh\" },\r\n  { JunctionName: \"Gorakhpur Junction\" },\r\n  { JunctionName: \"Gwalior Junction\" },\r\n  { JunctionName: \"Ghaziabad Junction\" },\r\n  { JunctionName: \"Agra Cantonment\" },\r\n  { JunctionName: \"Allahabad Junction\" },\r\n  { JunctionName: \"Ambala Cantonment\" },\r\n  { JunctionName: \"Warangal\" },\r\n  { JunctionName: \"Bhusaval Junction\" },\r\n  { JunctionName: \"Howrah Junction\" },\r\n  { JunctionName: \"Thrissur\" },\r\n  { JunctionName: \"Yesvantpur Junction\" },\r\n  { JunctionName: \"Visakhapatnam Junction\" },\r\n  { JunctionName: \"Asansol Junction\" },\r\n  { JunctionName: \"Nagpur Junction\" },\r\n  { JunctionName: \"Ahmedabad Junction\" },\r\n  { JunctionName: \"Coimbatore Junction\" },\r\n  { JunctionName: \"Thiruvananthapuram Central\" },\r\n];\r\n\r\nconst Traintopsection = ({ updateSearchParams }) => {\r\n  const [fromTrainData, setFromTrainData] = useState({\r\n    JunctionName: \"Delhi Junction\",\r\n  });\r\n  const [toTrainData, setToTrainData] = useState({\r\n    JunctionName: \"Salem Junction\",\r\n  });\r\n  const [dropDownData] = useState({ cities }); // No need for useFetch\r\n  const [params] = useSearchParams();\r\n  const date = decodeURI(params.get(\"date\"));\r\n  const source = params.get(\"source\");\r\n  const destination = params.get(\"destination\");\r\n  const [searchData, setSearchData] = useState({\r\n    source: \"Delhi Junction\",\r\n    destination: \"Salem Junction\",\r\n    day: new Date().toLocaleDateString('en-US', { weekday: 'short' }), // Default to current day\r\n    date: new Date().toLocaleDateString(),\r\n  });\r\n  const [showDate, setShowDate] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fromData = cities.find(\r\n      (train) => train.JunctionName.trim() === source.trim()\r\n    );\r\n    const toData = cities.find(\r\n      (train) => train.JunctionName.trim() === destination.trim()\r\n    );\r\n    setFromTrainData(fromData);\r\n    setToTrainData(toData);\r\n  }, [dropDownData]);\r\n\r\n  useEffect(() => {\r\n    if (selectedDate) {\r\n      const formattedDate = new Date(selectedDate).toLocaleDateString();\r\n      const dayOfWeek = new Date(selectedDate).toLocaleDateString('en-US', { weekday: 'short' });\r\n      setSearchData((prev) => ({\r\n        ...prev,\r\n        date: formattedDate,\r\n        day: dayOfWeek,\r\n      }));\r\n      document.getElementById(\"ts-datepicker\").innerText = formattedDate;\r\n    }\r\n  }, [selectedDate]);\r\n\r\n  const handleSearchData = (key, value) => {\r\n    setSearchData((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }));\r\n  };\r\n\r\n  const handleDepartureDateClick = () => {\r\n    setShowDate(!showDate);\r\n  };\r\n\r\n  const handleDepartureDate = (date) => {\r\n    setSelectedDate(date);\r\n    setShowDate(false);\r\n  };\r\n\r\n  const handleTrainSearchButtonClick = () => {\r\n    updateSearchParams(searchData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"trainspage-topdiv\">\r\n        <div className=\"trains-searchdetails-div\">\r\n          <TrainStation\r\n            handleSearchData={handleSearchData}\r\n            field={\"From\"}\r\n            trainData={fromTrainData}\r\n            setTrainData={setFromTrainData}\r\n          />\r\n          <TrainStation\r\n            handleSearchData={handleSearchData}\r\n            field={\"To\"}\r\n            trainData={toTrainData}\r\n            setTrainData={setToTrainData}\r\n          />\r\n\r\n          <div className=\"traveldate-div\" onClick={handleDepartureDateClick}>\r\n            <p>TRAVEL DATE</p>\r\n            <p id=\"ts-datepicker\">\r\n              {searchData.date}\r\n            </p>\r\n          </div>\r\n\r\n          <button\r\n            className=\"trains-searchbtn\"\r\n            onClick={handleTrainSearchButtonClick}\r\n          >\r\n            SEARCH\r\n          </button>\r\n        </div>\r\n        {showDate && (\r\n          <OutsideClickHandler onOutsideClick={() => setShowDate(false)}>\r\n            <div className=\"trainsearch-datepicker\">\r\n              <ReactDatePicker\r\n                selected={selectedDate}\r\n                onChange={handleDepartureDate}\r\n                inline\r\n                minDate={new Date()}\r\n              />\r\n            </div>\r\n          </OutsideClickHandler>\r\n        )}\r\n\r\n        <div className=\"sortedby-div\">\r\n          <p>Sorted By :</p>\r\n          <p>\r\n            <span>Availability(Default)</span>\r\n            <IoIosArrowUp size={16} color=\"#008cff\" />\r\n          </p>\r\n          <p>| Showing 48 out of 48 trains.</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Traintopsection;\r\n","D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\TrainCard.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Gallary.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Card.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\CardSec.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\TrainStation.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\components\\Traintopdropdown.jsx",[],[],"D:\\Trip Crafter\\TripCrafter\\TripCrafter\\frontend\\src\\pages\\Payment.jsx",[],[],{"ruleId":"149","severity":1,"message":"150","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":17},{"ruleId":"149","severity":1,"message":"153","line":25,"column":10,"nodeType":"151","messageId":"152","endLine":25,"endColumn":17},{"ruleId":"149","severity":1,"message":"154","line":26,"column":10,"nodeType":"151","messageId":"152","endLine":26,"endColumn":15},{"ruleId":"155","severity":1,"message":"156","line":92,"column":6,"nodeType":"157","endLine":92,"endColumn":14,"suggestions":"158"},{"ruleId":"149","severity":1,"message":"159","line":36,"column":9,"nodeType":"151","messageId":"152","endLine":36,"endColumn":13},{"ruleId":"155","severity":1,"message":"160","line":53,"column":6,"nodeType":"157","endLine":53,"endColumn":10,"suggestions":"161"},{"ruleId":"149","severity":1,"message":"159","line":51,"column":9,"nodeType":"151","messageId":"152","endLine":51,"endColumn":13},{"ruleId":"155","severity":1,"message":"162","line":72,"column":6,"nodeType":"157","endLine":72,"endColumn":20,"suggestions":"163"},"no-unused-vars","'trainData' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'arrivalTime', 'coachType', 'day', 'departureTime', 'destination', 'source', and 'trainType'. Either include them or remove the dependency array.","ArrayExpression",["164"],"'date' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'coachName'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has missing dependencies: 'destination' and 'source'. Either include them or remove the dependency array.",["166"],{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},"Update the dependencies array to be: [arrivalTime, coachType, day, departureTime, destination, params, source, trainType]",{"range":"173","text":"174"},"Update the dependencies array to be: [coachName, id]",{"range":"175","text":"176"},"Update the dependencies array to be: [destination, dropDownData, source]",{"range":"177","text":"178"},[2887,2895],"[arrivalTime, coachType, day, departureTime, destination, params, source, trainType]",[1716,1720],"[coachName, id]",[2762,2776],"[destination, dropDownData, source]"]